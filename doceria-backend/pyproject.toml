[tool.poetry]
name = "doceria-backend"
version = "0.1.0"
description = "Backend para a aplicação de gerenciamento de vendas e pedidos (Katherine Corrales - Doceria)"
authors = ["Miguel de Freitas Muniz <miguimuniz@gmail.com>",
            "Daphine Lucas do Vale",
            "Geisiane Schulz da Silva Martins",
            "Letícia do Vale Oliveira",
            "Nadine Emily Velasquez Corrales"
            ]
readme = "README.md"

[tool.poetry.dependencies]
python = "3.12.*"
fastapi = {extras = ["standard"], version = "^0.112.2"}
taskipy = "^1.13.0"
pydantic = {extras = ["email"], version = "^2.8.2"}
sqlalchemy = "^2.0.32"
pydantic-settings = "^2.4.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.2"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"

[tool.pytest.ini_options]
pythonpath = "."
addopts = "-p no:warnings"

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style ='single'

[tool.taskipy.tasks]
run = "fastapi dev doceria_backend/app.py"
pre_test = "task lint"
test = "pytest -s -x --cov=doceria_backend -vv"
post_test = "coverage html"
lint = "ruff check . && ruff check . --diff"
format = "ruff check . --fix && ruff format ."

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
